version: 2.1

jobs:
  prepare:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - checkout
      - run:
          name: Configure AWS CLI
          command: |
            apk update
            apk add --no-cache python3 py3-pip
            pip install awscli --break-system-packages
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: Terraform Initialization
          command: terraform init

  plan:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - checkout
      - run:
          name: Configure AWS CLI
          command: |
            apk update
            apk add --no-cache python3 py3-pip
            pip install awscli --break-system-packages
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: Terraform Validation
          command: terraform validate
      - run:
          name: Terraform Plan
          command: terraform plan -out=tfplan_tgw
      - persist_to_workspace:
          root: .
          paths:
            - tfplan_tgw

  apply:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - run:
          name: Configure AWS CLI
          command: |
            apk update
            apk add --no-cache python3 py3-pip
            pip install awscli --break-system-packages
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: Terraform Apply
          command: terraform apply -auto-approve /workspace/tfplan_tgw

  destroy:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - checkout
      - run:
          name: Configure AWS CLI
          command: |
            apk update
            apk add --no-cache python3 py3-pip
            pip install awscli --break-system-packages
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - run:
          name: Terraform Destroy
          command: terraform destroy -auto-approve

workflows:
  version: 2
  deploy:
    jobs:
      - prepare
      - plan
      - manual_approval:
          type: approval
          requires:
            - plan
      - apply:
          requires:
            - manual_approval
      - destroy:
          requires:
            - apply

